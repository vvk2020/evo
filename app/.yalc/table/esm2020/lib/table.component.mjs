import { Component } from '@angular/core';
import * as i0 from "@angular/core";
export class TableComponent {
    constructor() {
        this.displayedColumns = ['id', 'name'];
        this.users = [
            { id: 1, name: 'Сплин' },
            { id: 2, name: 'Кино' },
            { id: 3, name: 'Машина времени' },
            { id: 4, name: 'Би-2' },
            { id: 5, name: 'ДДТ' },
            { id: 6, name: 'Аквариум' },
            { id: 7, name: 'Nautilus Pompilius' },
            { id: 8, name: 'Ночные снайперы' },
            { id: 9, name: 'Пикник' },
            { id: 10, name: 'Чайф' },
        ];
    }
}
TableComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: TableComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TableComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.10", type: TableComponent, selector: "lib-table", ngImport: i0, template: "<!-- <section class=\"section\">\n  <h2 class=\"title\">\u0420\u0443\u0441\u0441\u043A\u0438\u0435 \u0440\u043E\u043A-\u0433\u0440\u0443\u043F\u043F\u044B</h2>\n  <ng-template #tableTemplate let-data=\"data\">\n    <table mat-table [dataSource]=\"data\" class=\"mat-elevation-z8\">\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>#</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>\u0413\u0440\u0443\u043F\u043F\u0430</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n  </ng-template>\n\n  <ng-container\n    *ngTemplateOutlet=\"tableTemplate; context: { data: users }\"\n  ></ng-container>\n</section> -->\n\n<h2>UUUUUUUUUUUUUU</h2>\n", styles: [".section{display:block;margin-inline:20px 10px 10px}h2.title{margin:0;padding:10px;color:#fff;text-transform:uppercase;background-image:linear-gradient(to right,#3f51b5,#f44336)}\n"] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: TableComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-table', standalone: false, template: "<!-- <section class=\"section\">\n  <h2 class=\"title\">\u0420\u0443\u0441\u0441\u043A\u0438\u0435 \u0440\u043E\u043A-\u0433\u0440\u0443\u043F\u043F\u044B</h2>\n  <ng-template #tableTemplate let-data=\"data\">\n    <table mat-table [dataSource]=\"data\" class=\"mat-elevation-z8\">\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>#</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>\u0413\u0440\u0443\u043F\u043F\u0430</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n  </ng-template>\n\n  <ng-container\n    *ngTemplateOutlet=\"tableTemplate; context: { data: users }\"\n  ></ng-container>\n</section> -->\n\n<h2>UUUUUUUUUUUUUU</h2>\n", styles: [".section{display:block;margin-inline:20px 10px 10px}h2.title{margin:0;padding:10px;color:#fff;text-transform:uppercase;background-image:linear-gradient(to right,#3f51b5,#f44336)}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvdGFibGUvc3JjL2xpYi90YWJsZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9wcm9qZWN0cy90YWJsZS9zcmMvbGliL3RhYmxlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBUTFDLE1BQU0sT0FBTyxjQUFjO0lBTjNCO1FBT0UscUJBQWdCLEdBQWEsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDNUMsVUFBSyxHQUFHO1lBQ04sRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUU7WUFDeEIsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUU7WUFDdkIsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRTtZQUNqQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRTtZQUN2QixFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRTtZQUN0QixFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRTtZQUMzQixFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLG9CQUFvQixFQUFFO1lBQ3JDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsaUJBQWlCLEVBQUU7WUFDbEMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUU7WUFDekIsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUU7U0FDekIsQ0FBQztLQUdIOzs0R0FoQlksY0FBYztnR0FBZCxjQUFjLGlEQ1IzQix3Z0NBdUJBOzRGRGZhLGNBQWM7a0JBTjFCLFNBQVM7K0JBQ0UsV0FBVyxjQUdULEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbGliLXRhYmxlJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vdGFibGUuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3RhYmxlLmNvbXBvbmVudC5jc3MnXSxcclxuICBzdGFuZGFsb25lOiBmYWxzZSxcclxufSlcclxuZXhwb3J0IGNsYXNzIFRhYmxlQ29tcG9uZW50IHtcclxuICBkaXNwbGF5ZWRDb2x1bW5zOiBzdHJpbmdbXSA9IFsnaWQnLCAnbmFtZSddO1xyXG4gIHVzZXJzID0gW1xyXG4gICAgeyBpZDogMSwgbmFtZTogJ9Ch0L/Qu9C40L0nIH0sXHJcbiAgICB7IGlkOiAyLCBuYW1lOiAn0JrQuNC90L4nIH0sXHJcbiAgICB7IGlkOiAzLCBuYW1lOiAn0JzQsNGI0LjQvdCwINCy0YDQtdC80LXQvdC4JyB9LFxyXG4gICAgeyBpZDogNCwgbmFtZTogJ9CR0LgtMicgfSxcclxuICAgIHsgaWQ6IDUsIG5hbWU6ICfQlNCU0KInIH0sXHJcbiAgICB7IGlkOiA2LCBuYW1lOiAn0JDQutCy0LDRgNC40YPQvCcgfSxcclxuICAgIHsgaWQ6IDcsIG5hbWU6ICdOYXV0aWx1cyBQb21waWxpdXMnIH0sXHJcbiAgICB7IGlkOiA4LCBuYW1lOiAn0J3QvtGH0L3Ri9C1INGB0L3QsNC50L/QtdGA0YsnIH0sXHJcbiAgICB7IGlkOiA5LCBuYW1lOiAn0J/QuNC60L3QuNC6JyB9LFxyXG4gICAgeyBpZDogMTAsIG5hbWU6ICfQp9Cw0LnRhCcgfSxcclxuICBdO1xyXG5cclxuICAvLyBkYXRhID0gbmV3IE1hdFRhYmxlRGF0YVNvdXJjZSh0aGlzLnVzZXJzKTtcclxufVxyXG4iLCI8IS0tIDxzZWN0aW9uIGNsYXNzPVwic2VjdGlvblwiPlxuICA8aDIgY2xhc3M9XCJ0aXRsZVwiPtCg0YPRgdGB0LrQuNC1INGA0L7Qui3Qs9GA0YPQv9C/0Ys8L2gyPlxuICA8bmctdGVtcGxhdGUgI3RhYmxlVGVtcGxhdGUgbGV0LWRhdGE9XCJkYXRhXCI+XG4gICAgPHRhYmxlIG1hdC10YWJsZSBbZGF0YVNvdXJjZV09XCJkYXRhXCIgY2xhc3M9XCJtYXQtZWxldmF0aW9uLXo4XCI+XG4gICAgICA8bmctY29udGFpbmVyIG1hdENvbHVtbkRlZj1cImlkXCI+XG4gICAgICAgIDx0aCBtYXQtaGVhZGVyLWNlbGwgKm1hdEhlYWRlckNlbGxEZWY+IzwvdGg+XG4gICAgICAgIDx0ZCBtYXQtY2VsbCAqbWF0Q2VsbERlZj1cImxldCBlbGVtZW50XCI+e3sgZWxlbWVudC5pZCB9fTwvdGQ+XG4gICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgIDxuZy1jb250YWluZXIgbWF0Q29sdW1uRGVmPVwibmFtZVwiPlxuICAgICAgICA8dGggbWF0LWhlYWRlci1jZWxsICptYXRIZWFkZXJDZWxsRGVmPtCT0YDRg9C/0L/QsDwvdGg+XG4gICAgICAgIDx0ZCBtYXQtY2VsbCAqbWF0Q2VsbERlZj1cImxldCBlbGVtZW50XCI+e3sgZWxlbWVudC5uYW1lIH19PC90ZD5cbiAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgPHRyIG1hdC1oZWFkZXItcm93ICptYXRIZWFkZXJSb3dEZWY9XCJkaXNwbGF5ZWRDb2x1bW5zXCI+PC90cj5cbiAgICAgIDx0ciBtYXQtcm93ICptYXRSb3dEZWY9XCJsZXQgcm93OyBjb2x1bW5zOiBkaXNwbGF5ZWRDb2x1bW5zXCI+PC90cj5cbiAgICA8L3RhYmxlPlxuICA8L25nLXRlbXBsYXRlPlxuXG4gIDxuZy1jb250YWluZXJcbiAgICAqbmdUZW1wbGF0ZU91dGxldD1cInRhYmxlVGVtcGxhdGU7IGNvbnRleHQ6IHsgZGF0YTogdXNlcnMgfVwiXG4gID48L25nLWNvbnRhaW5lcj5cbjwvc2VjdGlvbj4gLS0+XG5cbjxoMj5VVVVVVVVVVVVVVVVVVTwvaDI+XG4iXX0=